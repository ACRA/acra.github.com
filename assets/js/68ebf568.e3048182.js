"use strict";(self.webpackChunkacra=self.webpackChunkacra||[]).push([[372],{461:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var o=t(5893),i=t(1151);const s={sidebar_position:90,title:"Troubleshooting Guide"},r=void 0,a={id:"Troubleshooting-Guide",title:"Troubleshooting Guide",description:"On this page you'll find some common issues and their solutions.",source:"@site/docs/Troubleshooting-Guide.mdx",sourceDirName:".",slug:"/Troubleshooting-Guide",permalink:"/docs/Troubleshooting-Guide",draft:!1,unlisted:!1,editUrl:"https://github.com/acra/acra/edit/master/web/docs/Troubleshooting-Guide.mdx",tags:[],version:"current",sidebarPosition:90,frontMatter:{sidebar_position:90,title:"Troubleshooting Guide"},sidebar:"tutorialSidebar",previous:{title:"How to Debug",permalink:"/docs/How-to-debug"}},c={},l=[{value:"Instant Run",id:"instant-run",level:2},{value:"Legacy Multidex",id:"legacy-multidex",level:2},{value:"Application.onCreate()",id:"applicationoncreate",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",strong:"strong",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"On this page you'll find some common issues and their solutions."}),"\n",(0,o.jsx)(n.h2,{id:"instant-run",children:"Instant Run"}),"\n",(0,o.jsx)(n.p,{children:"We cannot guarantee ACRA will work with instant run enabled. Always try to reproduce an error with instant run disabled before reporting it."}),"\n",(0,o.jsx)(n.h2,{id:"legacy-multidex",children:"Legacy Multidex"}),"\n",(0,o.jsxs)(n.p,{children:["If you are using legacy multidex, ensure that ",(0,o.jsx)(n.code,{children:"ACRA.init(...)"})," is called ",(0,o.jsx)(n.strong,{children:"after"})," ",(0,o.jsx)(n.code,{children:"Multidex.install()"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"applicationoncreate",children:"Application.onCreate()"}),"\n",(0,o.jsxs)(n.p,{children:["ACRA uses a service to send crash reports. This service runs in a ",(0,o.jsx)(n.strong,{children:"separate process"})," to ensure that reports can be sent even when your own VM is dying from an unhandled exception. This means that a new instance of your application will be started and ",(0,o.jsx)(n.code,{children:"Application.onCreate()"})," will be called again. If you are performing once only tasks in ",(0,o.jsx)(n.code,{children:"Application.onCreate()"})," then check the name of the current process and don't do them if the process name is ",(0,o.jsx)(n.code,{children:":acra"}),". You can use ",(0,o.jsx)(n.code,{children:"ACRA.isACRASenderServiceProcess()"})," for this."]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var o=t(7294);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);