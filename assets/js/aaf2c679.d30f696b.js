"use strict";(self.webpackChunkacra=self.webpackChunkacra||[]).push([[131],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5130:function(e,t,n){n.d(t,{l7:function(){return v},TP:function(){return y}});var r=n(7294),a=n(3117),o=n(6010),i=n(2389),l=n(7392),s=n(7094),u=n(2466),c="tabList__CuJ",p="tabItem_LNqP";function d(e){var t,n,i=e.lazy,d=e.block,m=e.defaultValue,f=e.values,h=e.groupId,g=e.className,y=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=f?f:y.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,l.l)(v,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===m?m:null!=(t=null!=m?m:null==(n=y.find((function(e){return e.props.default})))?void 0:n.props.value)?t:y[0].props.value;if(null!==k&&!v.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,s.U)(),S=w.tabGroupChoices,C=w.setTabGroupChoices,T=(0,r.useState)(k),N=T[0],O=T[1],R=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var x=S[h];null!=x&&x!==N&&v.some((function(e){return e.value===x}))&&O(x)}var A=function(e){var t=e.currentTarget,n=R.indexOf(t),r=v[n].value;r!==N&&(E(t),O(r),null!=h&&C(h,String(r)))},P=function(e){var t,n=null;switch(e.key){case"Enter":A(e);break;case"ArrowRight":var r,a=R.indexOf(e.currentTarget)+1;n=null!=(r=R[a])?r:R[0];break;case"ArrowLeft":var o,i=R.indexOf(e.currentTarget)-1;n=null!=(o=R[i])?o:R[R.length-1]}null==(t=n)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":d},g)},v.map((function(e){var t=e.value,n=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:function(e){return R.push(e)},onKeyDown:P,onClick:A},i,{className:(0,o.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":N===t})}),null!=n?n:t)}))),i?(0,r.cloneElement)(y.filter((function(e){return e.props.value===N}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function m(e){var t=(0,i.Z)();return r.createElement(d,(0,a.Z)({key:String(t)},e))}var f="tabItem_Ymn6";function h(e){var t=e.children,n=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(f,a),hidden:n},t)}function g(e){var t=e.children,n=e.type,a=e.languages;return r.createElement(m,{defaultValue:"kotlin",groupId:n,values:a},t.map((function(e){var t=e.props.children.props,n=t&&t.className?t.className.replace(/^(language-)/,""):"kotlin";return r.createElement(h,{key:n,value:n},e)})))}function y(e){var t=e.children;return r.createElement(g,{type:"gradle",languages:[{label:"Kotlin",value:"kotlin"},{label:"Groovy",value:"groovy"}]},t)}function v(e){var t=e.children;return r.createElement(g,{type:"android",languages:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}]},t)}},8442:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=n(5130),l=["components"],s={sidebar_position:3},u=void 0,c={unversionedId:"Senders",id:"Senders",title:"Senders",description:"The following sections details the possible destinations for your crash reports: server backend, email, or any other destination you can imagine (if you implement the sender). And you can even send reports to multiple destinations.",source:"@site/docs/Senders.mdx",sourceDirName:".",slug:"/Senders",permalink:"/docs/Senders",draft:!1,editUrl:"https://github.com/acra/acra/edit/master/web/docs/Senders.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Interactions",permalink:"/docs/Interactions"},next:{title:"Backends",permalink:"/docs/Backends"}},p={},d=[{value:"Choosing a content type",id:"choosing-a-content-type",level:2},{value:"Sending reports via HTTP",id:"sending-reports-via-http",level:2},{value:"Sending reports by email",id:"sending-reports-by-email",level:2},{value:"Implementing your own sender",id:"implementing-your-own-sender",level:2},{value:"Registering your sender",id:"registering-your-sender",level:3}],m={toc:d};function f(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The following sections details the possible destinations for your crash reports: server backend, email, or any other destination you can imagine (if you implement the sender). And you can even send reports to multiple destinations."),(0,o.kt)("h2",{id:"choosing-a-content-type"},"Choosing a content type"),(0,o.kt)("p",null,"All official report senders support two types of report formats: ",(0,o.kt)("inlineCode",{parentName:"p"},"StringFormat.JSON")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"StringFormat.KEY_VALUE_LIST")," (form-data-compliant for http). Choose whichever your backend requires / which you like best:"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"initAcra {\n    reportFormat = StringFormat.JSON\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"coreConfigurationBuilder.withReportFormat(StringFormat.JSON)\n"))),(0,o.kt)("h2",{id:"sending-reports-via-http"},"Sending reports via HTTP"),(0,o.kt)("p",null,"The most convenient way to send your report with no necessary user interaction is via HTTP."),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'httpSender {\n    //required. Https recommended\n    uri = "https://your.server.com/report"\n    //optional. Enables http basic auth\n    basicAuthLogin = "acra"\n    //required if above set\n    basicAuthPassword = "password"\n    // defaults to POST\n    httpMethod = HttpSender.Method.POST\n    //defaults to 5000ms\n    connectionTimeout = 5000\n    //defaults to 20000ms\n    socketTimeout = 20000\n    // defaults to false\n    dropReportsOnTimeout = false\n    //the following options allow you to configure a self signed certificate\n    keyStoreFactoryClass = MyKeyStoreFactory::class.java\n    certificatePath = "asset://mycert.cer"\n    resCertificate = R.raw.mycert\n    certificateType = "X.509"\n    //defaults to false. Recommended if your backend supports it\n    compress = false\n    //defaults to all\n    tlsProtocols = arrayOf(TLS.V1_3, TLS.V1_2, TLS.V1_1, TLS.V1)\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'new HttpSenderConfigurationBuilder()\n    //required. Https recommended\n    .withUri("https://your.server.com/report")\n    //optional. Enables http basic auth\n    .withBasicAuthLogin("acra")\n    //required if above set\n    .withBasicAuthPassword("password")\n    // defaults to POST\n    .withHttpMethod(HttpSender.Method.POST)\n    //defaults to 5000ms\n    .withConnectionTimeout(5000)\n    //defaults to 20000ms\n    .withSocketTimeout(20000)\n    // defaults to false\n    .withDropReportsOnTimeout(false)\n    //the following options allow you to configure a self signed certificate\n    .withKeyStoreFactoryClass(MyKeyStoreFactory::class.java)\n    .withCertificatePath("asset://mycert.cer")\n    .withResCertificate(R.raw.mycert)\n    .withCertificateType("X.509")\n    //defaults to false. Recommended if your backend supports it\n    .withCompress(false)\n    //defaults to all\n    .withTlsProtocols(arrayOf(TLS.V1_3, TLS.V1_2, TLS.V1_1, TLS.V1))\n    .build()\n'))),(0,o.kt)("p",null,"In ",(0,o.kt)("inlineCode",{parentName:"p"},"PUT")," mode, ACRA adds the Report ID at the end of ",(0,o.kt)("inlineCode",{parentName:"p"},"uri")," automatically."),(0,o.kt)("p",null,"See also ",(0,o.kt)("a",{parentName:"p",href:"Backends"},"Backends")),(0,o.kt)("h2",{id:"sending-reports-by-email"},"Sending reports by email"),(0,o.kt)("p",null,"For some applications, sending reports to a http based solution is not an option. The problem is that they require the ",(0,o.kt)("inlineCode",{parentName:"p"},"INTERNET")," permission."),(0,o.kt)("p",null,"For pure offline applications, users might even be frightened to grant this permission and can be suspicious about the\nreal goal of the app or the developer."),(0,o.kt)("p",null,"To get crash reports without granting ",(0,o.kt)("inlineCode",{parentName:"p"},"INTERNET")," permission, you can use the mail sender:"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'mailSender {\n    //required\n    mailTo = "acra@yourserver.com"\n    //defaults to true\n    reportAsFile = true\n    //defaults to ACRA-report.stacktrace\n    reportFileName = "Crash.txt"\n    //defaults to "<applicationId> Crash Report"\n    subject = getString(R.string.mail_subject)\n    //defaults to empty\n    body = getString(R.string.mail_body)\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'new MailSenderConfigurationBuilder()\n    //required\n    .withMailTo("acra@yourserver.com")\n    //defaults to true\n    .withReportAsFile(true)\n    //defaults to ACRA-report.stacktrace\n    .withReportFileName("Crash.txt")\n    //defaults to "<applicationId> Crash Report"\n    .withSubject(getString(R.string.mail_subject))\n    //defaults to empty\n    .withBody(getString(R.string.mail_body))\n    .build()\n'))),(0,o.kt)("p",null,"Emails are sent with an ",(0,o.kt)("inlineCode",{parentName:"p"},"ACTION_SEND_MULTIPLE")," intent. This means that the following steps are required for the application user before any report is sent:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"pick preferred email client (if no default app set)"),(0,o.kt)("li",{parentName:"ul"},"review & actually send the email")),(0,o.kt)("h2",{id:"implementing-your-own-sender"},"Implementing your own sender"),(0,o.kt)("p",null,"You can implement your own ",(0,o.kt)("inlineCode",{parentName:"p"},"ReportSender")," and configure ACRA to use that instead of or in addition to other senders."),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class YourOwnSender : ReportSender {\n\n  override fun send(context: Context, report: CrashReportData) {\n    // Iterate over the CrashReportData instance and do whatever\n    // you need with each pair of ReportField key / String value\n  }\n}\n\nclass YourOwnSenderfactory : ReportSenderFactory {\n\n    // requires a no arg constructor.\n\n    override fun create(context: Context, config: ACRAConfiguration) : ReportSender {\n        return YourOwnSender()\n    }\n\n    //optional implementation in case you want to disable your sender in certain cases\n    override fun enabled(coreConfig : CoreConfiguration) : Boolean {\n        return true\n    }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public class YourOwnSender implements ReportSender {\n\n    @Override\n    public void send(Context context, CrashReportData report) throws ReportSenderException {\n        // Iterate over the CrashReportData instance and do whatever\n        // you need with each pair of ReportField key / String value\n    }\n}\n\npublic class YourOwnSenderfactory implements ReportSenderFactory {\n\n    // requires a no arg constructor.\n\n    @Override\n    public ReportSender create(Context context, ACRAConfiguration config) {\n        return new YourOwnSender(someConfigPerhaps);\n    }\n\n    //optional implementation in case you want to disable your sender in certain cases\n    @Override\n    public boolean enabled(@NonNull CoreConfiguration coreConfig) {\n        return true;\n    }\n}\n"))),(0,o.kt)("h3",{id:"registering-your-sender"},"Registering your sender"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"/docs/Custom-Extensions"},"Custom extensions"),"."),(0,o.kt)("p",null,"You can also look at our ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ACRA/acra/tree/master/examples"},"example projects"),", which contain an example of a custom sender each."))}f.isMDXComponent=!0}}]);