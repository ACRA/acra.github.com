"use strict";(self.webpackChunkacra=self.webpackChunkacra||[]).push([[850],{4383:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=a(6966),l=["components"],s={sidebar_position:60,title:"Custom Extensions"},d=void 0,c={unversionedId:"Custom-Extensions",id:"Custom-Extensions",isDocsHomePage:!1,title:"Custom Extensions",description:"Implementing an extension",source:"@site/docs/Custom-Extensions.mdx",sourceDirName:".",slug:"/Custom-Extensions",permalink:"/docs/Custom-Extensions",editUrl:"https://github.com/acra/acra/edit/master/web/docs/Custom-Extensions.mdx",tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60,title:"Custom Extensions"},sidebar:"tutorialSidebar",previous:{title:"Advanced Usage",permalink:"/docs/AdvancedUsage"},next:{title:"How to Debug",permalink:"/docs/How-to-debug"}},p=[{value:"Implementing an extension",id:"implementing-an-extension",children:[],level:2},{value:"Registering an extension",id:"registering-an-extension",children:[{value:"By annotation",id:"by-annotation",children:[],level:3},{value:"By file",id:"by-file",children:[],level:3}],level:2}],u={toc:p};function m(e){var t=e.components,a=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"implementing-an-extension"},"Implementing an extension"),(0,o.kt)("p",null,"Create a class extending one of the supported interfaces. "),(0,o.kt)("p",null,"It has to be ",(0,o.kt)("inlineCode",{parentName:"p"},"public")," and have a zero-argument public constructor (as a result, it cannot be an inner class)."),(0,o.kt)("p",null,"Example:"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'MyAdmin : ReportingAdministrator {\n    init {\n        Log.d("MyAdmin", "MyAdmin was loaded")\n    }\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public MyAdmin implements ReportingAdministrator {\n    public MyAdmin() {\n        Log.d("MyAdmin", "MyAdmin was loaded");\n    }\n}\n'))),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Supported Extensions"),(0,o.kt)("th",{parentName:"tr",align:null},"Use Case"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"pathname:///javadoc/latest/acra/org.acra.collector/-collector"},(0,o.kt)("inlineCode",{parentName:"a"},"Collector"))),(0,o.kt)("td",{parentName:"tr",align:null},"Collect additional custom data not covered by acra")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"pathname:///javadoc/latest/acra/org.acra.collector/-application-startup-collector"},(0,o.kt)("inlineCode",{parentName:"a"},"ApplicationStartupCollector"))),(0,o.kt)("td",{parentName:"tr",align:null},"Collector which is also called at startup")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"pathname:///javadoc/latest/acra/org.acra.interaction/-report-interaction"},(0,o.kt)("inlineCode",{parentName:"a"},"ReportInteraction"))),(0,o.kt)("td",{parentName:"tr",align:null},"Usually not needed, as the provided options (dialog, notification, toast) cover all reasonable choices")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"pathname:///javadoc/latest/acra/org.acra.config/-reporting-administrator"},(0,o.kt)("inlineCode",{parentName:"a"},"ReportingAdministrator"))),(0,o.kt)("td",{parentName:"tr",align:null},"Control when reports are generated and when the application should be stopped")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"pathname:///javadoc/latest/acra/org.acra.sender/-report-sender-factory"},(0,o.kt)("inlineCode",{parentName:"a"},"ReportSenderFactory"))),(0,o.kt)("td",{parentName:"tr",align:null},"Register custom report senders")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"pathname:///javadoc/latest/acra/org.acra.config/-configuration-builder-factory"},(0,o.kt)("inlineCode",{parentName:"a"},"ConfigurationBuilderFactory"))),(0,o.kt)("td",{parentName:"tr",align:null},"Register custom configurations")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"pathname:///javadoc/latest/acra/org.acra.scheduler/-sender-scheduler-factory"},(0,o.kt)("inlineCode",{parentName:"a"},"SenderSchedulerFactory"))),(0,o.kt)("td",{parentName:"tr",align:null},"Register custom sender scheduler, e.g. to prevent report sending based on custom conditions")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"pathname:///javadoc/latest/acra/org.acra.startup/-startup-processor"},(0,o.kt)("inlineCode",{parentName:"a"},"StartupProcessor"))),(0,o.kt)("td",{parentName:"tr",align:null},"Do something ACRA related on app start")))),(0,o.kt)("h2",{id:"registering-an-extension"},"Registering an extension"),(0,o.kt)("p",null,"Choose one of the following alternatives:"),(0,o.kt)("h3",{id:"by-annotation"},"By annotation"),(0,o.kt)("p",null,"Add the following dependencies:"),(0,o.kt)(i.TP,{mdxType:"GradleCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'},'compileOnly("com.google.auto.service:auto-service-annotations:1.0")\n//either for java sources:\nannotationProcessor("com.google.auto.service:auto-service:1.0")\n//or for kotlin sources (requires kapt gradle plugin):\nkapt("com.google.auto.service:auto-service:1.0")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-groovy",metastring:'title="build.gradle"',title:'"build.gradle"'},'compileOnly "com.google.auto.service:auto-service-annotations:1.0"\n//either for java sources:\nannotationProcessor "com.google.auto.service:auto-service:1.0"\n//or for kotlin sources (requires kapt gradle plugin):\nkapt "com.google.auto.service:auto-service:1.0"\n'))),(0,o.kt)("p",null,"Then annotate your extension with the following:"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"@AutoService(<ExtensionInterface>::class)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"@AutoService(<ExtensionInterface>.class)\n"))),(0,o.kt)("h3",{id:"by-file"},"By file"),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/java/util/ServiceLoader.html"},"ServiceLoader")," for manual service registration"))}m.isMDXComponent=!0}}]);