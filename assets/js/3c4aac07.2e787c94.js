"use strict";(self.webpackChunkacra=self.webpackChunkacra||[]).push([[604],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,g=c["".concat(s,".").concat(m)]||c[m]||p[m]||o;return n?a.createElement(g,i(i({ref:t},u),{},{components:n})):a.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5130:function(e,t,n){n.d(t,{l7:function(){return k},TP:function(){return y}});var a=n(7294),r=n(3117),o=n(6010),i=n(2389),l=n(7392),s=n(7094),d=n(2466),u="tabList__CuJ",p="tabItem_LNqP";function c(e){var t,n,i=e.lazy,c=e.block,m=e.defaultValue,g=e.values,h=e.groupId,f=e.className,y=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=g?g:y.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),v=(0,l.l)(k,(function(e,t){return e.value===t.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===m?m:null!=(t=null!=m?m:null==(n=y.find((function(e){return e.props.default})))?void 0:n.props.value)?t:y[0].props.value;if(null!==b&&!k.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),C=N.tabGroupChoices,A=N.setTabGroupChoices,w=(0,a.useState)(b),x=w[0],S=w[1],E=[],_=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var O=C[h];null!=O&&O!==x&&k.some((function(e){return e.value===O}))&&S(O)}var T=function(e){var t=e.currentTarget,n=E.indexOf(t),a=k[n].value;a!==x&&(_(t),S(a),null!=h&&A(h,String(a)))},R=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,r=E.indexOf(e.currentTarget)+1;n=null!=(a=E[r])?a:E[0];break;case"ArrowLeft":var o,i=E.indexOf(e.currentTarget)-1;n=null!=(o=E[i])?o:E[E.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":c},f)},k.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:function(e){return E.push(e)},onKeyDown:R,onFocus:T,onClick:T},i,{className:(0,o.Z)("tabs__item",p,null==i?void 0:i.className,{"tabs__item--active":x===t})}),null!=n?n:t)}))),i?(0,a.cloneElement)(y.filter((function(e){return e.props.value===x}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},y.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==x})}))))}function m(e){var t=(0,i.Z)();return a.createElement(c,(0,r.Z)({key:String(t)},e))}var g="tabItem_Ymn6";function h(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(g,r),hidden:n},t)}function f(e){var t=e.children,n=e.type,r=e.languages;return a.createElement(m,{defaultValue:"kotlin",groupId:n,values:r},t.map((function(e){var t=e.props.children.props,n=t&&t.className?t.className.replace(/^(language-)/,""):"kotlin";return a.createElement(h,{key:n,value:n},e)})))}function y(e){var t=e.children;return a.createElement(f,{type:"gradle",languages:[{label:"Kotlin",value:"kotlin"},{label:"Groovy",value:"groovy"}]},t)}function k(e){var t=e.children;return a.createElement(f,{type:"android",languages:[{label:"Kotlin",value:"kotlin"},{label:"Java",value:"java"}]},t)}},9242:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var a=n(3117),r=n(102),o=(n(7294),n(3905)),i=n(5130),l=["components"],s={sidebar_position:50,title:"Advanced Usage"},d=void 0,u={unversionedId:"AdvancedUsage",id:"AdvancedUsage",title:"Advanced Usage",description:"This is ACRA's Advanced Usage Guide. You need to set up your project before using all the features described here.",source:"@site/docs/AdvancedUsage.mdx",sourceDirName:".",slug:"/AdvancedUsage",permalink:"/docs/AdvancedUsage",draft:!1,editUrl:"https://github.com/acra/acra/edit/master/web/docs/AdvancedUsage.mdx",tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50,title:"Advanced Usage"},sidebar:"tutorialSidebar",previous:{title:"Backends",permalink:"/docs/Backends"},next:{title:"Custom Extensions",permalink:"/docs/Custom-Extensions"}},p={},c=[{value:"Customizing the Content of the Reports",id:"customizing-the-content-of-the-reports",level:2},{value:"Adding your own custom variables or traces in crash reports (&quot;Breadcrumbs&quot;)",id:"adding-your-own-custom-variables-or-traces-in-crash-reports-breadcrumbs",level:3},{value:"Adding logcat, eventlog or radiolog extracts to reports",id:"adding-logcat-eventlog-or-radiolog-extracts-to-reports",level:3},{value:"Adding your own log file extracts to reports",id:"adding-your-own-log-file-extracts-to-reports",level:3},{value:"Adding file attachments to reports",id:"adding-file-attachments-to-reports",level:3},{value:"Adding DropBoxManager events to your reports",id:"adding-dropboxmanager-events-to-your-reports",level:3},{value:"Adding the Device Unique ID to your reports",id:"adding-the-device-unique-id-to-your-reports",level:3},{value:"Choosing which fields to be included in reports",id:"choosing-which-fields-to-be-included-in-reports",level:3},{value:"Adding custom SharedPreferences names",id:"adding-custom-sharedpreferences-names",level:3},{value:"Exclude SharedPreferences keys",id:"exclude-sharedpreferences-keys",level:3},{value:"Exclude Settings keys",id:"exclude-settings-keys",level:3},{value:"Letting your users control ACRA",id:"letting-your-users-control-acra",level:2},{value:"Enable/disable ACRA",id:"enabledisable-acra",level:3},{value:"Enable/disable system logs",id:"enabledisable-system-logs",level:3},{value:"Enable/disable including DeviceID",id:"enabledisable-including-deviceid",level:3},{value:"Set an email address to be added to reports",id:"set-an-email-address-to-be-added-to-reports",level:3},{value:"Enable/disable auto accept reports",id:"enabledisable-auto-accept-reports",level:3},{value:"Sending reports for caught exceptions or for unexpected application state without any exception",id:"sending-reports-for-caught-exceptions-or-for-unexpected-application-state-without-any-exception",level:2},{value:"Configuring a KeyStore",id:"configuring-a-keystore",level:2},{value:"Catching Application Not Responding errors (ANR)",id:"catching-application-not-responding-errors-anr",level:2},{value:"Catching Native Code errors",id:"catching-native-code-errors",level:2}],m={toc:c};function g(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This is ACRA's Advanced Usage Guide. You need to ",(0,o.kt)("a",{parentName:"p",href:"Setup"},"set up your project")," before using all the features described here."),(0,o.kt)("h2",{id:"customizing-the-content-of-the-reports"},"Customizing the Content of the Reports"),(0,o.kt)("p",null,"ACRA provides ",(0,o.kt)("a",{parentName:"p",href:"pathname:///javadoc/latest/acra/org.acra/-report-field"},"lots of data about the device and the state of your application"),". There are some options to let you add even more data to help debugging."),(0,o.kt)("h3",{id:"adding-your-own-custom-variables-or-traces-in-crash-reports-breadcrumbs"},'Adding your own custom variables or traces in crash reports ("Breadcrumbs")'),(0,o.kt)("p",null,"To help you track some specific issue, you can add custom data to reports."),(0,o.kt)("p",null,"Simply use the following method when certain events happen in your code:"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'ACRA.errorReporter.putCustomData("myKey", "myValue")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'ACRA.getErrorReporter().putCustomData("myKey", "myValue");\n'))),(0,o.kt)("p",null,"All your custom data (key/value pairs) will be added in the report column ",(0,o.kt)("inlineCode",{parentName:"p"},"CUSTOM")," just before the crash (stack trace). Each key/value pair will be shown on one line. Note that each key is a ",(0,o.kt)("inlineCode",{parentName:"p"},"set")," that can only be used once, without duplicates. So if you re-use the same ",(0,o.kt)("inlineCode",{parentName:"p"},"key")," for a different ",(0,o.kt)("inlineCode",{parentName:"p"},"value"),", then the old ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," will be deleted and replaced with the new ",(0,o.kt)("inlineCode",{parentName:"p"},"value"),"."),(0,o.kt)("p",null,'If you want the report to show "Breadcrumbs" to indicate which events happened in time order, just before a crash, then you need to track events using unique keys. Here\'s an example:'),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'fun trackBreadcrumb(event: String) {\n    ACRA.errorReporter.putCustomData("Event at ${System.currentTimeMillis()}", event)\n}\n\noverride fun onCreate(savedInstanceState: Bundle) {\n    super.onCreate()\n    trackBreadcrumb("MyActivity.onCreate()")\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'public static void trackBreadcrumb(String event) {\n    ACRA.getErrorReporter().putCustomData("Event at " + System.currentTimeMillis(), event);\n}\n\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate();\n    trackBreadcrumb("MyActivity.onCreate()");\n    ...\n}\n'))),(0,o.kt)("p",null,"You can also use ",(0,o.kt)("inlineCode",{parentName:"p"},'getCustomData("myVariable")')," and ",(0,o.kt)("inlineCode",{parentName:"p"},'removeCustomData("myVariable")')," to get/remove data from the custom data map."),(0,o.kt)("h3",{id:"adding-logcat-eventlog-or-radiolog-extracts-to-reports"},"Adding logcat, eventlog or radiolog extracts to reports"),(0,o.kt)("p",null,"ACRA includes a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/studio/command-line/logcat"},"logcat")," extract by default."),(0,o.kt)("p",null,"The behavior is to include the result of the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"adb logcat -t 200 -v time\n")),(0,o.kt)("p",null,"This results to 200 lines of logcat with date, invocation time, priority/tag, and PID of the originating process."),(0,o.kt)("p",null,"If this is not what you want, you can change this with your own command line using ",(0,o.kt)("inlineCode",{parentName:"p"},"logcatArguments")," in your configuration. For example, if you prefer using:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"adb logcat -t 100 -v long ActivityManager:I MyApp:D *:S\n")),(0,o.kt)("p",null,"then add this to your config:"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'logcatArguments = arrayOf("-t", "100", "-v", "long", "ActivityManager:I", "MyApp:D", "*:S")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'.withLogcatArguments("-t", "100", "-v", "long", "ActivityManager:I", "MyApp:D", "*:S")\n'))),(0,o.kt)("p",null,"As you can see, you just have to split your command line arguments to a String array on each white space."),(0,o.kt)("p",null,"Note: you can find further information about how to use logcat ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/studio/command-line/logcat"},"here"),", logcat (used in the backend by ACRA) will be able to filter by tag, that you will need to keep constant in your application."),(0,o.kt)("p",null,"In addition to the ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," default buffer, ACRA can retrieve the 2 other alternative buffers ",(0,o.kt)("inlineCode",{parentName:"p"},"event")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"radio"),". If these data are of any use for you, you have to activate their collection:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"add ",(0,o.kt)("inlineCode",{parentName:"li"},"EVENTSLOG")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"RADIOLOG")," fields to ",(0,o.kt)("inlineCode",{parentName:"li"},"reportContent"),".")),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"}," System logs may contain private data logged by other applications like user email address, calendar events, contacts data..."),(0,o.kt)("p",{parentName:"admonition"},"You should consider ",(0,o.kt)("a",{parentName:"p",href:"#enabledisable-system-logs"},"adding a user preference item to let your user choose to include system logs or not"),".")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"}," Collecting long system logs might take quite some time and induce a latency right after your application crash. Include them only if you know how to analyze them and avoid collecting more than 100 lines.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"}," ",(0,o.kt)("inlineCode",{parentName:"p"},"READ_LOG")," permission is not granted to third-party apps anymore since Android 4.1 (JellyBean). Starting with this version, logcat provides only traces from your own app, without requiring a permission. JellyBean logcat logs are retrieved by ACRA starting with version 4.3.0b2")),(0,o.kt)("h3",{id:"adding-your-own-log-file-extracts-to-reports"},"Adding your own log file extracts to reports"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Since 4.3.0b1")),(0,o.kt)("p",null,"If you chose to log your debug traces to an independent file (using for example ",(0,o.kt)("a",{parentName:"p",href:"http://code.google.com/p/android-logging-log4j"},"android-logging-log4j"),", ",(0,o.kt)("a",{parentName:"p",href:"http://www.slf4j.org/android/"},"slf4j")," or ",(0,o.kt)("a",{parentName:"p",href:"http://tony19.github.com/logback-android/"},"logback-android"),"), ACRA can get the latest lines from this file and send them in your reports."),(0,o.kt)("p",null,"Include the field ",(0,o.kt)("inlineCode",{parentName:"p"},"APPLICATION_LOG")," in your ",(0,o.kt)("inlineCode",{parentName:"p"},"customReportContent")," and spreadsheet template then configure it with:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'applicationLogFile = "applog.log"')," to define the path/name of the log file"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"applicationLogFileDir = Directory.FILES")," to define the base path of the log file"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"applicationLogFileLines = 150")," to set the number of latest lines you want to be retrieved (default is 100).")),(0,o.kt)("h3",{id:"adding-file-attachments-to-reports"},"Adding file attachments to reports"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"Since 4.10.0"))),(0,o.kt)("p",null,"You can attach arbitrary files to acra reports (if your backend supports it)."),(0,o.kt)("p",null,"Set one of the following:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},'attachmentUris = "content://your.app.acra/files/yourcustomfile.txt"')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"attachmentUriProvider = YourAttachmentProvider.class"))),(0,o.kt)("p",null,"See ",(0,o.kt)("a",{parentName:"p",href:"pathname:///javadoc/latest/acra/org.acra.annotation/-acra-core/attachment-uris.html"},(0,o.kt)("inlineCode",{parentName:"a"},"attachmentUris"))," for details on how to format your uri strings. Alternatively you can use your own ",(0,o.kt)("inlineCode",{parentName:"p"},"ContentProvider")," with a respective uri."),(0,o.kt)("h3",{id:"adding-dropboxmanager-events-to-your-reports"},"Adding DropBoxManager events to your reports"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/os/DropBoxManager.html"},"DropBoxManager")," has been introduced in android API level 8 (2.2 - FroYo). This is a new logging system focused on persisting long chunks of text or data for debugging purposes. There is a ",(0,o.kt)("a",{parentName:"p",href:"http://stackoverflow.com/questions/4434192/dropboxmanager-use-cases"},"Q&A on StackOverflow")," explaining the usage of this system."),(0,o.kt)("p",null,"As it is a rarely used feature, you need to enable it by including the field ",(0,o.kt)("inlineCode",{parentName:"p"},"DROPBOX")," in your ",(0,o.kt)("inlineCode",{parentName:"p"},"reportContent"),"."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"}," ",(0,o.kt)("em",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"em"},"READ_LOG")," permission is not granted to third-party apps anymore since Android 4.1 (JellyBean). Starting with this version, logcat provides only traces from your own app, without requiring a permission. JellyBean logcat logs are retrieved by ACRA starting with version 4.3.0b2"))),(0,o.kt)("p",null,"A list of DropBox tags has been built by searching for ",(0,o.kt)("inlineCode",{parentName:"p"},"DropBoxManager")," usage in android source code. All these system tagged events can be retrieved if you set ",(0,o.kt)("inlineCode",{parentName:"p"},"includeDropBoxSystemTags")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"system_app_anr")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"system_app_wtf")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"system_app_crash")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"system_server_anr")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"system_server_wtf")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"system_server_crash")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BATTERY_DISCHARGE_INFO")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SYSTEM_RECOVERY_LOG")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SYSTEM_BOOT")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SYSTEM_LAST_KMSG")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"APANIC_CONSOLE")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"APANIC_THREADS")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SYSTEM_RESTART")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SYSTEM_TOMBSTONE")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"data_app_strictmode"))),(0,o.kt)("p",null,"You can add your own dropbox tags using ",(0,o.kt)("inlineCode",{parentName:"p"},"additionalDropBoxTags"),", and set the max age in minutes for events to be retrieved using ",(0,o.kt)("inlineCode",{parentName:"p"},"dropboxCollectionMinutes"),"."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Collecting DropBox events might take quite some time and induce a latency right after your application crash. Increase the ",(0,o.kt)("inlineCode",{parentName:"p"},"dropBoxCollectionMinutes")," only if you know what you are doing.")),(0,o.kt)("h3",{id:"adding-the-device-unique-id-to-your-reports"},"Adding the Device Unique ID to your reports"),(0,o.kt)("p",null,"In some circumstances, tracking exactly which identified devices throw which report can be necessary. ACRA will include your users Device ID (IMEI for GSM and the MEID or ESN for CDMA phones) if you add the following permission to your application manifest:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<manifest ...>\n    ...\n    <uses-permission android:name="android.permission.READ_PHONE_STATE"></uses-permission>\n</manifest>\n')),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This unique device ID is considered as private data as it could let you track users behaviors... You should consider ",(0,o.kt)("a",{parentName:"p",href:"#enabledisable-including-deviceid"},"adding a user preference item to let your user choose to include this device id or not"),".")),(0,o.kt)("h3",{id:"choosing-which-fields-to-be-included-in-reports"},"Choosing which fields to be included in reports"),(0,o.kt)("p",null,"You can change the default set of fields included in your reports using ",(0,o.kt)("inlineCode",{parentName:"p"},"reportContent = { array of ReportField }"),". For example:"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"reportContent = arrayOf(APP_VERSION, ANDROID_VERSION, PHONE_MODEL, CUSTOM_DATA, STACK_TRACE, LOGCAT)\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},".withReportContent(APP_VERSION, ANDROID_VERSION, PHONE_MODEL, CUSTOM_DATA, STACK_TRACE, LOGCAT)\n"))),(0,o.kt)("p",null,"Limiting your reports to what you really want and really use can help avoiding performance issues when collecting reports data. Only fields which are set in reportContent are actually processed."),(0,o.kt)("h3",{id:"adding-custom-sharedpreferences-names"},"Adding custom SharedPreferences names"),(0,o.kt)("p",null,"The system ",(0,o.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/preference/PreferenceManager.html#getDefaultSharedPreferences(android.content.Context)"},"default SharedPreferences")," for your application are  automatically collected in the ",(0,o.kt)("inlineCode",{parentName:"p"},"SHARED_PREFERENCES")," field."),(0,o.kt)("p",null,"If your app contains multiple ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedPreferences"),' files, or if you are using a non-default name, you can add them by providing their names with `additionalSharedPreferences = arrayOf("my_own_prefs","a_second_prefs")'),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"your shared preferences file name is set when you open your ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedPreferences"),":"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'context.getSharedPreferences("My file name to be used in acra", Context.MODE_PRIVATE)\n')),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-java"},'context.getSharedPreferences("My file name to be used in acra", Context.MODE_PRIVATE);\n')))),(0,o.kt)("h3",{id:"exclude-sharedpreferences-keys"},"Exclude SharedPreferences keys"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Since 4.3.0b1")),(0,o.kt)("p",null,"If your ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedPreferences")," contain private data that you don't want to be transmitted in reports, you can define exclusion rules using ",(0,o.kt)("a",{parentName:"p",href:"http://en.wikipedia.org/wiki/Regular_expression"},"Regular Expressions")," provided in the ",(0,o.kt)("inlineCode",{parentName:"p"},"excludeMatchingSharedPreferencesKeys")," configuration item."),(0,o.kt)("p",null,"Every key matching any of these regular expressions will be excluded from reports."),(0,o.kt)("h3",{id:"exclude-settings-keys"},"Exclude Settings keys"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Since 4.5.0")),(0,o.kt)("p",null,"Similarly to SharedPreferences, you may want to exclude some keys from the various settings fields collected by ACRA."),(0,o.kt)("p",null,"The configuration item to use is ",(0,o.kt)("inlineCode",{parentName:"p"},"excludeMatchingSettingsKeys"),"."),(0,o.kt)("h2",{id:"letting-your-users-control-acra"},"Letting your users control ACRA"),(0,o.kt)("p",null,"Some ACRA behaviors can be configured by your application users through the use of ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedPreferences")," items."),(0,o.kt)("p",null,"You can store any ACRA ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedPreferences")," separately from your application ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedPreferences"),". To do so use the ",(0,o.kt)("inlineCode",{parentName:"p"},"sharedPreferencesName")," configuration."),(0,o.kt)("h3",{id:"enabledisable-acra"},"Enable/disable ACRA"),(0,o.kt)("p",null,"Add to your preferences xml file a CheckBoxPreference (checking it disables ACRA):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<CheckBoxPreference android:key="acra.disable"\n    android:title="@string/pref_disable_acra"\n    android:summaryOn="@string/pref_acra_disabled"\n    android:summaryOff="@string/pref_acra_enabled"\n    android:defaultValue="false"/>\n')),(0,o.kt)("p",null,"Or if you prefer the opposite (checking it to enable ACRA):"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<CheckBoxPreference android:key="acra.enable"\n    android:title="@string/pref_enable_acra"\n    android:summaryOn="@string/pref_acra_enabled"\n    android:summaryOff="@string/pref_acra_disabled"\n    android:defaultValue="true"/>\n')),(0,o.kt)("p",null,"Of course you have to define the matching strings in your ",(0,o.kt)("inlineCode",{parentName:"p"},"strings.xml")," files."),(0,o.kt)("h3",{id:"enabledisable-system-logs"},"Enable/disable system logs"),(0,o.kt)("p",null,"Including logcat extracts in reports is a great tool for developers, but it can lead to privacy issues as some other applications might log private data like user account names, opened URLs, calendar events..."),(0,o.kt)("p",null,"Giving your users a way to control the inclusion of logcat data make them understand that you care about their privacy. This can be done with the inclusion of the following ",(0,o.kt)("inlineCode",{parentName:"p"},"CheckBoxPreference"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},' <CheckBoxPreference android:key="acra.syslog.enable"\n    android:summaryOn="@string/pref_acra_syslog_enabled"\n    android:summaryOff="@string/pref_acra_syslog_disabled"\n    android:title="@string/pref_acra_syslog"\n    android:defaultValue="true"/>\n')),(0,o.kt)("p",null,"Of course you have to define the matching strings in your ",(0,o.kt)("inlineCode",{parentName:"p"},"strings.xml")," files."),(0,o.kt)("h3",{id:"enabledisable-including-deviceid"},"Enable/disable including DeviceID"),(0,o.kt)("p",null,"If you added the ",(0,o.kt)("inlineCode",{parentName:"p"},"READ_PHONE_STATE")," permission to your application but want to let your user be able to disable the inclusion of their Device ID in crash reports, you can include the following ",(0,o.kt)("inlineCode",{parentName:"p"},"CheckBoxPreference"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},' <CheckBoxPreference android:key="acra.deviceid.enable"\n    android:title="@string/pref_acra_deviceid"\n    android:summaryOn="@string/pref_acra_deviceid_enabled"\n    android:summaryOff="@string/pref_acra_deviceid_disabled" \n    android:defaultValue="true"/>\n')),(0,o.kt)("p",null,"Of course you have to define the matching strings in your ",(0,o.kt)("inlineCode",{parentName:"p"},"strings.xml")," files."),(0,o.kt)("h3",{id:"set-an-email-address-to-be-added-to-reports"},"Set an email address to be added to reports"),(0,o.kt)("p",null,"Some users might be willing to help debugging your app. You can ask them to input an email address that will be included in every report to allow you contact them:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},' <EditTextPreference android:key="acra.user.email"\n    android:title="@string/pref_acra_user_email"\n    android:summary="@string/pref_acra_user_email_summary"/>\n')),(0,o.kt)("h3",{id:"enabledisable-auto-accept-reports"},"Enable/disable auto accept reports"),(0,o.kt)("p",null,"While in ",(0,o.kt)("inlineCode",{parentName:"p"},"NOTIFICATION")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"DIALOG")," mode, you can allow your users to choose to auto-accept sending all reports. This is like letting them switch from ",(0,o.kt)("inlineCode",{parentName:"p"},"NOTIFICATION"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"DIALOG")," mode to ",(0,o.kt)("inlineCode",{parentName:"p"},"SILENT")," mode."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},' <CheckBoxPreference android:key="acra.alwaysaccept"\n    android:title="@string/pref_acra_alwaysaccept"\n    android:summaryOn="@string/pref_acra_alwaysaccept_enabled"\n    android:summaryOff="@string/pref_acra_alwaysaccept_disabled"\n    android:defaultValue="false"/>\n')),(0,o.kt)("h2",{id:"sending-reports-for-caught-exceptions-or-for-unexpected-application-state-without-any-exception"},"Sending reports for caught exceptions or for unexpected application state without any exception"),(0,o.kt)("p",null,"As a good programmer, your code is full of try/catch statements, and sometimes an interesting (unexpected) exception might be caught in one of these."),(0,o.kt)("p",null,"You could also want your application to send a report without any Exception thrown, just because you know that your application is in an unexpected state."),(0,o.kt)("p",null,"Both of these needs can be covered by this:"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"caughtException.sendWithAcra()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"ACRA.getErrorReporter().handleException(caughtException);\n"))),(0,o.kt)("p",null,"You can provide any caught or custom Exception, or even ",(0,o.kt)("inlineCode",{parentName:"p"},"null")," if you don't have any to provide."),(0,o.kt)("p",null,"If you need to add silent trace reports whatever interaction mode you configured for your application, you can also use:"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"caughtException.sendSilentlyWithAcra()\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"ACRA.getErrorReporter().handleSilentException(caughtException);\n"))),(0,o.kt)("h2",{id:"configuring-a-keystore"},"Configuring a KeyStore"),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"keystoreFactory = MyKeyStoreFactory::class.java\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},".withKeyStoreFactory(MyKeyStoreFactory.class)\n"))),(0,o.kt)(i.l7,{mdxType:"AndroidCode"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class MyKeyStoreFactory : BaseKeyStoreFactory() {// or KeyStoreFactory for more control\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"public class MyKeyStoreFactory extends BaseKeyStoreFactory {// or KeyStoreFactory for more control\n}\n"))),(0,o.kt)("p",null,"Alternatively you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"certificatePath"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"resCertificate")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"certificateType")," configuration options to use one of ACRAs default KeyStoreFactories."),(0,o.kt)("h2",{id:"catching-application-not-responding-errors-anr"},"Catching Application Not Responding errors (ANR)"),(0,o.kt)("p",null,"ACRA has no integrated system to monitor your app and send reports when it's not responding."),(0,o.kt)("p",null,"There is an interesting approach provided by ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/SalomonBrys/ANR-WatchDog"},"Salomon Brys on Github"),". Its watchdog thread tries to execute a small code every 5 seconds and throws an exception if it failed. This exception will be reported by ACRA."),(0,o.kt)("h2",{id:"catching-native-code-errors"},"Catching Native Code errors"),(0,o.kt)("p",null,"ACRA does not catch errors occurring in native code.\nWe currently don't know any stable solution to catch native errors with ACRA."))}g.isMDXComponent=!0}}]);